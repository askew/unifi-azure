{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "681588657805155943"
    }
  },
  "parameters": {
    "vmName": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "allowedValues": [
        "Standard_B1s",
        "Standard_B1ms",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_F2s"
      ],
      "metadata": {
        "description": ""
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name for the virtual network."
      }
    },
    "addressSpace": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The IPv4 address space of the virtual network."
      }
    },
    "backupStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The storage account name used for the backups. (leave empty for automatic name)"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "The admin username for the VM."
      }
    },
    "adminPublicKey": {
      "type": "string",
      "metadata": {
        "description": "The public SSH key used for admin login on the VM."
      }
    },
    "homePublicIP": {
      "type": "string",
      "metadata": {
        "description": "Public IP address of the home network. The NSG will restrict access to this IP."
      }
    },
    "sshNatPort": {
      "type": "int",
      "defaultValue": 22,
      "metadata": {
        "description": "The port number to expose for SSH access to the VM. Will be NAT'd to 22."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure region to deploy resources to."
      }
    }
  },
  "variables": {
    "suffix": "[take(uniqueString(resourceGroup().id), 4)]",
    "computerName": "[toUpper(parameters('vmName'))]",
    "cidrParts": "[split(parameters('addressSpace'), '/')]",
    "addressSpaceParts": "[split(variables('cidrParts')[0], '.')]",
    "addressPrefix24": "[format('{0}.{1}.{2}', variables('addressSpaceParts')[0], variables('addressSpaceParts')[1], variables('addressSpaceParts')[2])]",
    "subnetName": "unifi",
    "networkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
    "availabilitySetName": "[format('{0}-as', parameters('vmName'))]",
    "backupStgAcc": "[if(empty(parameters('backupStorageAccountName')), format('backup{0}', variables('suffix')), parameters('backupStorageAccountName'))]",
    "pipName": "[format('{0}-pip', parameters('vmName'))]",
    "lbName": "[format('{0}-lb', parameters('vmName'))]",
    "mountFields": [
      "[format('//{0}.file.{1}/backup', variables('backupStgAcc'), environment().suffixes.storage)]",
      "/azure",
      "cifs",
      "vers=3.0,credentials=/root/.smbcreds,dir_mode=0777,file_mode=0777,sec=ntlmssp",
      "0",
      "0"
    ],
    "cloudInitFormat": "#cloud-config\r\n\r\ntimezone: Europe/London\r\n\r\napt:\r\n  sources:\r\n    unifi:\r\n      keyid: 06E85760C0A52C50\r\n      keyserver: keyserver.ubuntu.com\r\n      source: \"deb https://www.ui.com/downloads/unifi/debian stable ubiquiti\"\r\n    mongodb-org-4.4:\r\n      keyid: 20691EEC35216C63CAF66CE1656408E390CFB1F5\r\n      source: \"deb [arch=amd64] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\"\r\n\r\npackages:\r\n- alsa-topology-conf\r\n- alsa-ucm-conf\r\n- apt-transport-https\r\n- binutils\r\n- ca-certificates\r\n- ca-certificates-java\r\n- fontconfig-config\r\n- fonts-dejavu-core\r\n- java-common\r\n- libasound2\r\n- libasound2-data\r\n- libavahi-client3\r\n- libavahi-common-data\r\n- libavahi-common3\r\n- libcommons-daemon-java\r\n- libcups2\r\n- libfontconfig1\r\n- libgraphite2-3\r\n- libharfbuzz0b\r\n- libjpeg-turbo8\r\n- libjpeg8\r\n- liblcms2-2\r\n- libnspr4\r\n- libnss3\r\n- libpcsclite1\r\n- logrotate\r\n- mongodb-org-server\r\n- openjdk-17-jre-headless\r\n- unifi\r\n\r\npackage_update: true\r\npackage_upgrade: true\r\npackage_reboot_if_required: false\r\n\r\nwrite_files:\r\n- content: |\r\n    #!/bin/bash\r\n\r\n    if [ ! -d '/azure/autobackup' ]; then\r\n        mkdir /azure/autobackup\r\n    fi\r\n    if [ ! -L '/var/lib/unifi/backup' -a -d '/var/lib/unifi/backup' ]; then\r\n        rm -rf /var/lib/unifi/backup\r\n        cd /var/lib/unifi/\r\n        ln -s /azure backup\r\n        chown -h unifi:unifi backup\r\n    fi\r\n  owner: root:root\r\n  path: /root/unifi-setup.sh\r\n  permissions: '0744'\r\n- path: /root/.smbcreds\r\n  owner: root:root\r\n  permissions: '0600'\r\n  content: |\r\n    username={0}\r\n    password={1}\r\n\r\nbootcmd:\r\n- if [ ! -d '/azure' ]; then mkdir /azure; fi\r\n- |\r\n  curl -sSfLO http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2_amd64.deb\r\n  dpkg -i libssl1.1_1.1.1f-1ubuntu2_amd64.deb\r\n  rm -f libssl1.1_1.1.1f-1ubuntu2_amd64.deb\r\n\r\nruncmd:\r\n- [ bash, /root/unifi-setup.sh ]\r\n\r\nmounts:\r\n- {2}",
    "lbFrontEndRef": {
      "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), 'PublicEndpoint')]"
    },
    "lbBackEndRef": {
      "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'unificntr')]"
    },
    "lbProbeRef": {
      "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), 'inform')]"
    },
    "lbNatRuleRef": {
      "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('lbName'), 'ssh')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', variables('backupStgAcc'), 'default', 'backup')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('backupStgAcc'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('backupStgAcc'), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": false
        },
        "containerDeleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('backupStgAcc'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('backupStgAcc'), 'default')]",
      "properties": {
        "shareDeleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('backupStgAcc'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-06-01",
      "name": "Unifi-nsg",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow-ssh",
            "properties": {
              "priority": 110,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('homePublicIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "Allow-inform-home",
            "properties": {
              "priority": 120,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('homePublicIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "8080"
            }
          },
          {
            "name": "Allow-inform-lb",
            "properties": {
              "priority": 130,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "8080"
            }
          },
          {
            "name": "Allow-ubntui-home",
            "properties": {
              "priority": 140,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('homePublicIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "8443"
            }
          },
          {
            "name": "Allow-ubntui-lb",
            "properties": {
              "priority": 150,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "8443"
            }
          },
          {
            "name": "Allow-http-redirect",
            "properties": {
              "priority": 160,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('homePublicIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "8880"
            }
          },
          {
            "name": "Allow-https-redirect",
            "properties": {
              "priority": 170,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('homePublicIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "8843"
            }
          },
          {
            "name": "Allow-mobile-speedtest",
            "properties": {
              "priority": 180,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('homePublicIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "6789"
            }
          },
          {
            "name": "Allow-stun",
            "properties": {
              "priority": 190,
              "protocol": "Udp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('homePublicIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "3478"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-06-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[format('{0}.0/25', variables('addressPrefix24'))]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'Unifi-nsg')]"
              },
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Storage",
                  "locations": [
                    "uksouth",
                    "ukwest"
                  ]
                }
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'Unifi-nsg')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-06-01",
      "name": "[variables('pipName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-06-01",
      "name": "[variables('lbName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "PublicEndpoint",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "unificntr"
          }
        ],
        "inboundNatRules": [
          {
            "name": "ssh",
            "properties": {
              "frontendIPConfiguration": "[variables('lbFrontEndRef')]",
              "protocol": "Tcp",
              "frontendPort": "[parameters('sshNatPort')]",
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "ubntui",
            "properties": {
              "frontendIPConfiguration": "[variables('lbFrontEndRef')]",
              "frontendPort": 443,
              "backendAddressPool": "[variables('lbBackEndRef')]",
              "backendPort": 8443,
              "protocol": "Tcp",
              "probe": "[variables('lbProbeRef')]",
              "enableFloatingIP": false,
              "disableOutboundSnat": true
            }
          },
          {
            "name": "inform",
            "properties": {
              "frontendIPConfiguration": "[variables('lbFrontEndRef')]",
              "frontendPort": 8080,
              "backendAddressPool": "[variables('lbBackEndRef')]",
              "backendPort": 8080,
              "protocol": "Tcp",
              "probe": "[variables('lbProbeRef')]",
              "enableFloatingIP": false,
              "disableOutboundSnat": true
            }
          },
          {
            "name": "STUN",
            "properties": {
              "frontendIPConfiguration": "[variables('lbFrontEndRef')]",
              "frontendPort": 3478,
              "backendAddressPool": "[variables('lbBackEndRef')]",
              "backendPort": 3478,
              "protocol": "Udp",
              "probe": "[variables('lbProbeRef')]",
              "enableFloatingIP": false,
              "disableOutboundSnat": true
            }
          },
          {
            "name": "UnifiMobile",
            "properties": {
              "frontendIPConfiguration": "[variables('lbFrontEndRef')]",
              "frontendPort": 6789,
              "backendAddressPool": "[variables('lbBackEndRef')]",
              "backendPort": 6789,
              "protocol": "Tcp",
              "probe": "[variables('lbProbeRef')]",
              "enableFloatingIP": false,
              "disableOutboundSnat": true
            }
          },
          {
            "name": "HttpRedirect",
            "properties": {
              "frontendIPConfiguration": "[variables('lbFrontEndRef')]",
              "frontendPort": 8880,
              "backendAddressPool": "[variables('lbBackEndRef')]",
              "backendPort": 8880,
              "protocol": "Tcp",
              "probe": "[variables('lbProbeRef')]",
              "enableFloatingIP": false,
              "disableOutboundSnat": true
            }
          },
          {
            "name": "HttpsRedirect",
            "properties": {
              "frontendIPConfiguration": "[variables('lbFrontEndRef')]",
              "frontendPort": 8843,
              "backendAddressPool": "[variables('lbBackEndRef')]",
              "backendPort": 8843,
              "protocol": "Tcp",
              "probe": "[variables('lbProbeRef')]",
              "enableFloatingIP": false,
              "disableOutboundSnat": true
            }
          }
        ],
        "outboundRules": [
          {
            "name": "default",
            "properties": {
              "frontendIPConfigurations": [
                "[variables('lbFrontEndRef')]"
              ],
              "backendAddressPool": "[variables('lbBackEndRef')]",
              "protocol": "All"
            }
          }
        ],
        "probes": [
          {
            "name": "inform",
            "properties": {
              "port": 8080,
              "protocol": "Tcp",
              "intervalInSeconds": 15,
              "numberOfProbes": 3
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-06-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('subnetName'))]"
              },
              "loadBalancerBackendAddressPools": [
                "[variables('lbBackEndRef')]"
              ],
              "loadBalancerInboundNatRules": [
                "[variables('lbNatRuleRef')]"
              ],
              "primary": true,
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2023-09-01",
      "name": "[variables('availabilitySetName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 5
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('backupStgAcc')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Cool",
        "allowBlobPublicAccess": false,
        "publicNetworkAccess": "Enabled",
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          }
        },
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny",
          "ipRules": [
            {
              "value": "[parameters('homePublicIP')]",
              "action": "Allow"
            }
          ],
          "virtualNetworkRules": [
            {
              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('subnetName'))]",
              "action": "Allow"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-09-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('computerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "provisionVMAgent": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('adminPublicKey')]",
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]"
                }
              ]
            }
          },
          "customData": "[base64(format(variables('cloudInitFormat'), variables('backupStgAcc'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('backupStgAcc')), '2023-01-01').keys[0].value, string(variables('mountFields'))))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
              "properties": {
                "primary": true,
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "securityProfile": {
          "securityType": "TrustedLaunch",
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          }
        },
        "storageProfile": {
          "osDisk": {
            "name": "[format('{0}-os', toLower(parameters('vmName')))]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": 32,
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "deleteOption": "Delete"
          },
          "imageReference": {
            "publisher": "canonical",
            "offer": "0001-com-ubuntu-minimal-jammy",
            "sku": "minimal-22_04-lts-gen2",
            "version": "latest"
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('backupStgAcc'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    }
  ]
}